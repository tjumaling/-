————————————————————————————————————————————————————————————————————————————————————————————————————————
字符串一旦创建就不可修改，一旦修改或者拼接，都会造成重新生成字符串
【替换空格】
从后往前
O(n2)——>O(n)
举一反三：
两个排序数组A1和A2，A1有足够多空余空间，把A2插入A1中，保持排序。


————————————————————————————————————————————————————————————————————————————————————————————————————————
【正则表达式匹配】*****
请实现一个函数用来匹配包括'.'和'*'的正则表达式。模式中的字符'.'表示任意一个字符，而'*'表示它前面的字符可以出现任意次（包含0次）。
在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串"aaa"与模式"a.a"和"ab*ac*a"匹配，但是与"aa.a"和"ab*a"均不匹配
class Solution:
	def match(self, s, pattern):
		if s=='' and pattern=='':
			return True
		if s!='' and pattern=='':
			return False
		if len(pattern)>1 and pattern[1]=='*':
			if s and (pattern[0]=='.' or pattern[0]==s[0]):
				return self.match(s,pattern[2:]) or self.match(s[1:],pattern[2:]) or self.match(s[1:],pattern)
			else:
				return self.match(s,pattern[2:])
		if s and (pattern[0]=='.' or pattern[0]==s[0]):
			return self.match(s[1:],pattern[1:])
		return False


————————————————————————————————————————————————————————————————————————————————————————————————————————
【打印从1到最大的n位数】
输入数字n，按顺序打印从1到最大的n位十进制数。
class Solution:
	def print1ToMaxOfNDigits(self, n):
		if n <= 0:
			return
		for i in '0123456789':
			s = i
			self.printRecursively(s, n)
		return
	def printRecursively(self, s, n):
		if len(s) == n:
			self.printNumber(s)
			return
		for i in '0123456789':
			s0 = s + i
			self.printRecursively(s0, n)
		return
	def printNumber(self, s):
		for i in range(len(s)):
			if s[i] != '0':
				break
		print s[i:]
				

————————————————————————————————————————————————————————————————————————————————————————————————————————
【表示数值的字符串】
请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。
例如，字符串"+100","5e2","-123","3.1416"和"-1E-16"都表示数值。 
但是"12e","1a3.14","1.2.3","+-5"和"12e+4.3"都不是。
class Solution:
	def isNumeric(self, s):
		if len(s) == 0:
			return False
		
